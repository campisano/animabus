<?xml version="1.0" encoding="UTF-8"?>

<!-- from http://www.mkyong.com/spring-mvc/spring-3-mvc-and-json-example/ -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:beans="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/mvc
						   http://www.springframework.org/schema/mvc/spring-mvc.xsd
						   http://www.springframework.org/schema/tx
						   http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Config from
		https://gerrydevstory.com/2014/03/03/creating-a-minimal-spring-mvc-jpa-hibernate-and-mysql-project/
	-->

	<!-- Enable annotation-based Spring MVC controllers (eg: @Controller annotation) -->
	<mvc:annotation-driven/>

	<!-- Classpath scanning of @Component, @Service, etc annotated class -->
	<context:component-scan base-package="persistence"/>
	<context:component-scan base-package="domain"/>
	<context:component-scan base-package="service"/>
	<context:component-scan base-package="presentation"/>
	<context:component-scan base-package="infrastructure"/>

	<!-- EntityManagerFactory -->
	<!-- http://docs.spring.io/spring/docs/current/spring-framework-reference/html/orm.html#orm-jpa-setup-lcemfb -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="defaultPersistenceUnit"/>
		<property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="infrastructure"/>
	</bean>

	<!-- Transaction Manager -->
	<!-- http://docs.spring.io/spring/docs/current/spring-framework-reference/html/orm.html#orm-jpa-tx -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- Enable @Transactional annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- Quartz scheduler START -->

	<!-- Define the Job Bean that will be executed. Our bean is named in the targetObject property. -->
	<bean name="getBusGPSPositionJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="gpsBusService"/> <!-- This is GpsBusService bean class defined by component-scan -->
		<property name="targetMethod" value="insertListBus"/>
	</bean>

	<!-- Associate the Job Bean with a Trigger. Triggers define when a job is executed. -->
	<bean id="getBusGPSPositionTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<!-- invoke job above -->
		<property name="jobDetail" ref="getBusGPSPositionJobDetail"/>
		<!-- delay start by 10 seconds -->
		<property name="startDelay" value="10000"/>
		<!-- repeat every 60 seconds -->
		<property name="repeatInterval" value="60000"/>
	</bean>

	<!-- A list of Triggers to be scheduled and executed by Quartz -->
	<bean id="getBusGPSPositionScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="applicationContextSchedulerContextKey">
			<value>applicationContext</value>
		</property>
		<property name="triggers">
			<list>
				<ref bean="getBusGPSPositionTrigger"/>
			</list>
		</property>
	</bean>

	<!-- Quartz scheduler END -->

</beans>
